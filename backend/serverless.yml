service: serverless-chat-app-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-southeast-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminConfirmSignUp
      Resource: "*"

plugins:
  - serverless-appsync-plugin

custom:
  appSync:
    name: chatAppAppSync
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      userPoolId:
        Ref: UserPool
      awsRegion: ${self:provider.region}
      defaultAction: ALLOW
    mappingTemplatesLocation: resolvers
    mappingTemplates:
      - dataSource: RawTable
        type: Query
        field: getUserById
      - dataSource: RawTable
        type: Query
        field: getAllUsers
      - dataSource: RawTable
        type: Mutation
        field: createUser
      - dataSource: RawTable
        type: Mutation
        field: deleteUser
      - dataSource: RawTable
        type: Mutation
        field: updateUser
      - dataSource: RawTable
        type: Query
        field: getAllMessages
      - dataSource: RawTable
        type: Mutation
        field: createMessage
    additionalAuthenticationProviders:
      - authenticationType: AWS_IAM
    dataSources:
      - type: AMAZON_DYNAMODB
        name: RawTable
        config:
          tableName: chatAppTable

resources:
  Resources:
    RawTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: chatAppTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: chatAppUsers
        AutoVerifiedAttributes:
          - email
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false

    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId:
          Ref: UserPool
        ClientName: chat-app-client
        GenerateSecret: false
